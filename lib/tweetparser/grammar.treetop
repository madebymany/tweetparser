grammar TweetContent
  rule tweet
    (url / html / space / newline / list / username / hashtag / slash / text)* {
      def content
        elements.map{ |e| e.content }
      end
    }
  end

  rule subdomain
    ([a-zA-Z0-9\-] / [^\x20-\x7F])+
  end

  rule url
    (("http" / "HTTP") [sS]? "://" / "www." / "WWW.") subdomain ("." subdomain)+ ("/" [\.a-zA-Z0-9\?#=\-_&%]*)* {
      def content
        [:url, text_value]
      end
    }
  end

  rule name
    [a-zA-Z0-9_]+
  end

  rule name_with_letters
    [a-zA-Z] [a-zA-Z0-9_]* / [0-9_]+ [a-zA-Z] [a-zA-Z0-9_]*
  end

  rule username
    ("@" / "＠") name {
      def content
        [:username, text_value]
      end
    }
  end

  rule list
    username "/" name {
      def content
        [:list, text_value]
      end
    }
  end

  rule hashtag
    ("#" / "＃") name_with_letters {
      def content
        [:hashtag, text_value]
      end
    }
  end

  rule slash
    "/" name {
      def content
        [:slash, text_value]
      end
    }
  end

  rule text
    [\S]+ {
      def content
        [:text, text_value]
      end
    }
  end

  rule html
    "<" [^>]+ ">" {
      def content
        [:html, text_value]
      end
    }
  end

  rule newline
    "\r"? "\n" {
      def content
        [:newline]
      end
    }
  end

  rule space
    (" " / "　")+ {
      def content
        [:space, text_value]
      end
    }
  end
end
